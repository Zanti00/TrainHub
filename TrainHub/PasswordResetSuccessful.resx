<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAUAAAAFACAYAAADNkKWqAAABgGlDQ1BJQ0MgcHJvZmlsZQAAKM+VkTlI
        A0EYhT833kQsTCFisYVamUZFLCWKIiiEJIJX4e7GRCG7ht2IjaVgK1h4NEYtbKy1tbAVBMEDxF6wUrQR
        Wf9JAglCBAeG+Xgz7zHzBrR8xrK92mGwnZwbG4/oM7NzesML9Wg00kSrYXnZqfhYgqrj844atd6GVRb/
        Gy3JJc+CGl142Mq6OeFF4cH1XFbxnnDIWjaSwmfCva5cUPhB6WaRXxWnC6ypzJCbiI0Ih4T1dAWbFWwt
        u7bwgHBX0nYkX5spclLxhmI7s2aV7qleGFxypuNKl9nJOBNMEUXHZI0VMuQIy+qI4hGT/UgVf0fBHxWX
        Ka4VLHGMsoqNUfCj/uB3t16qv6+YFIxA3bPvv3dDww58b/v+15Hvfx9D4AkunbJ/NQ9DH6Jvl7WuQ2jd
        hPOrsmbuwsUWtD9mDdcoSAGZWioFb6fyTbPQdgPN88XeSvuc3ENCupq8hv0D6ElL9kKVdzdW9vbnmVJ/
        PyQ5coe01NoOAAAACXBIWXMAAAsQAAALEAGtI711AAAAB3RJTUUH6QYCCAoniSDRmAAAFBlJREFUeF7t
        1E1yZDtyROFek3aimdarufagnbSs7VmrXn2XLDKTASAA+DE7s7zpjr/4xz9CCCGEEEIIIYQQQgghXM9/
        /8///nMn7R9CCN/CYXKKrjOEcDkOidt0P0IIh+MQiH/pPoUQNsYHHt/TfQ0hNMXHG2t1v0MIi/GRxjl6
        DiGEifgg4xo9lxBCMT662FvPL4TwBj6suJeeZwjhG/iQ4t56viGED/DhxLP0vEO4Gh9IvEvvQwhX4EOI
        d+v9COFIvPgx/l3vSwjH4GWP8SO9NyFsi5c7xlf0PoWwBV7kGH+i9yuElnhxY6zU+xZCG7ysMY7QexfC
        MrycMc7U+xjCNLyMMa7QexnCcLyE8XPdu+/i/8TPde9CGIIX73bdn9nY53bdnxBK8KKdruvfHdd3uq4/
        hLfwYp2saz8V132yrj2El/BCnabrvQ334zRdbwjfwot0iq4z/I77dYquM4QP8eLsrGsL7+G+7qxrC+H/
        8bLsqGsKtbjfO+qaQtj+YrueMBb3fzddT7gYL8dOupYwF89jJ11LuAwvxA66htALz2sHXUO4AC/BDrqG
        0BPPbQddQzgYD7+zdg974Xl21u7hQDz0zto97Inn2lm7h0PwoLtq73AWnndX7R02xsPtqJ3D2Xj+HbVz
        2BAPtZv2DXfhfeimfcNmeKCdtGu4E+9FJ+0aNsBD7KRdQ/g73pdO2jU0xEPrpF1D+AjvTSftGprhgXXR
        niH8Ce9PF+0ZGuFhddCOIbyC96mDdgyL8YA6aMcQfoL3q4N2DAvwUDpoxxAq8J510I5hMh7Iau0XQiXe
        t9XaL0zEw1it/UIYgfdutfYLg/EAVmq3EGbifVyp3cIA3PTV2i+EmXgfV2u/UIwbvkp7hbAS7+cq7RWK
        ccNXaKcQOuA9XaGdQhFu9CrtFUInvK+rtFf4AW7uCu0UQme8vyu0U3gDN3WFdgphB7zHK7RTeBE3dLb2
        CWEnvM+ztU94ATdztvYJYUe817O1T/gGbuJs7RPCzni/Z2uf8AfcvNnaJ4QT8J7P1j7hA9y02donhJPw
        vs/WPgHcsJnaJYQT8d7P1C7hb7hZM7VLCCfj/Z+pXUIOJITp+A5mapercXNmapcQbsL3MFO7XImbMlO7
        hHAjvouZ2uU63JBZ2iOEm/F9zNIeV+FmzNIeIYS8x+m4ETO0QwjhF76XGdrheNyAWdojhPDEdzNLexyL
        C5+hHUIIn+P7maEdjsRFz9AOIYSv8R3N0A7H4YJnaIcQwtf4jmZoh6NwsTO0Qwjh+/ieZmiHY3ChozU/
        hPA6vqvRmn8ELnK05ocQ3sf3NVrzt8bFzdAOIYT38X3N0A5b4qJGa34IoQ7f22jN3w4XNFrzQwh1+N5G
        a/52uKDRmh9CqMP3Nlrzt8LFjNb8EEI9vrvRmr8FLmK05ocQxuH7G6357XEBIzU7hDAe3+FIzW6N5Udq
        dghhHr7HkZrdFouP1OwQwj/+8R//+V///Eh/91N8jyM1uyWWHqnZIdyMw+47+h/v4LscqdntsPBIzQ7h
        Vhxsr+h/vYrvcqRmt8PCozQ3hFtxoL2j//kqvs9RmtsKy47S3BBuxUH2E/3vV/GdjtLcFlhylOaGcCsO
        sArNeBXf6yjNXY4FR2luCDfi4KrUrFfwvY7S3KVYbqRmh3AbDqxqzXsF3+tIzV6GxUZpbgi34bAapbmv
        4LsdpblLsNQozQ3hNhxSozX/FXy/ozR3OhYapbkh3ITDaYZ2eAXf7yjNnY6FRmhmCDfhYJqlPV7FdzxC
        M6djoRGaGcItOJRmapdX8R2P0MypWGaEZoZwCw6k2drnHXzPIzRzGhYZoZkh3IDDaIV2egff8wjNnIIl
        RmluCKfjIFqlvd7B9zxKc4djgRGaGcLpOIRWard38V2P0MyhGD5CM0M4HQfQSu32U3zfIzRzGAaP0MwQ
        TsYBtFK7VeD7HqGZQzB0lOaGcCoOoNXarwLf9yjNLcfAEZoZwqk4fFZrv0p85yM0sxwDqzUvhFNx+KzW
        fiPwvVdrXjkGVmteCCfi8Fmt/Ubhe6/WvHIMrNa8EE7D4bNa+43E916teaUYNkIzQzgJh89q7Tca3/sI
        zSzDoGrNC+EUHDwdtOMsfPfVmleCISM0M4QTcPB00I4z8d2P0MwfY0C15oVwAg6eDtpxBb7/as37MQZU
        a14IJ+DwWa39VuH7r9a8H+GfV2teCLvj4OmgHVfjHKjWvLfxj6s1L4SdcfB00I4dcA5Ua97b+MfVmhfC
        rjh4OmjHLjgHqjXvLfzTas0LYWccPqu1XzecB9Wa9zL+YbXmhbAjDp4O2rEjzoNqzXsZ/7Ba80LYDQdP
        B+3YFedBtea9jH9YrXkh7ISDp4N27IzzoFrzXsY/rNa8EHbC4bNa+3XHeVCteS/jH1ZqVgi74ODpoB13
        wblQqVkv4Z9Va14IO+Dg6aAdd8K5UK1538Y/qta8ELrj4OmgHXfDuVCted/GP6rWvBC64/BZrf12xLlQ
        rXnfwj+p1rwQOuPg6aAdd8b5UK15X+IfVGteCF1x8HTQjrvjfKjWvC/xD6o1L4SOOHg6aMcTcD5Ua96X
        +AeVmhVCVxw+q7XfSTgnKjXrS/yDSs0KoRsOntXa70ScE5Wa9Uf8uFrzQuiEw2e19jsV50S15n2KH1Zq
        VgidcPis1n6n47yo1KxP8cNKzQqhEw6g1drvdJwXlZr1KX5YqVkhdMDBs1r73YLzolKzPsUPKzUrhNU4
        fFZrv5twXlRq1of4UbXmhbASh89q7XcbzotqzXvgB9WaF8JKHECrtd9tOC+qNe+BH1RrXggrcPCs1n63
        4ryo1rwHflCteSHMxuGzWvvdjPOiWvMe+EG15oUwE4fPau13O86Las174AfVmhfCTBxAq7Xf7TgvqjXv
        gR9UalZ3vKy5uPvi+a3WfuEXzo1KzXrgB5Wa1RUv65/029APz2y19gu/49yo1KwHflCpWR3xsn6l34de
        eF6rtV944tyo1KwHflCpWd3wsn5H/yP0wvNarf3CE+dGpWY98INKzeqCl/Qd/c+wFs9ntfYLn+PcqNSs
        B35QqVkd8KL+RP87zMcz6aAdw59xblRq1gM/qNSsDnhZf6r/H+bieazWfuFrnBuVmvXADyo1azVe1grN
        CPPwLDpox/A1zo1KzXrgB5WatQov6QjNDONw7ztox/B9nBuVmvXAD6o0ZxVe1JGaHepxzztox/A6zo8q
        zXngB1Waswov62jND7W436u1X3gP50eV5jzwgyrNWYGXdYZ2CHW41x20Y3gP50eV5jzwgyrNmY0Xdbb2
        Ce/j3nbQjuFnOD+qNOeBH1Rpzmy8sCu0U3gd97SDdgw/x/lRpTkP/KBKc2bihV2p3cJruJ+rtV+owflR
        pTkP/KBKc2bipV2p3cL3cS9Xa79Qh/OjSnMe+EGV5szEi7ta+4U/4/510I6hFudHleY88IMqzZmJl7eD
        dgwf47510I6hHudHleY88IMqzZmJF7iL9gxP3LPV2i+MwflRpTkP/KBKc2biJe6kXcMv3KvV2i+Mw/lR
        pTkP/KBKc2bjZe6kXW/H/emgHcNYnB9VmvPAD6o0ZwVe6k7a9Vbclw7aMYzH+VGlOQ/8oEpzVuHl7qRd
        b8Q9Wa39whycH1Wa88APKjVrBV7wbtr3JtyL1dovzMG5UalZD/ygUrNW4mXvpF1Px/Wv1n5hLs6NSs16
        4AeVmrUaL34n7Xoqrnu19gvzcW5UatYDP6jUrA74ADpp1xNxzau1X5iPc6NSsx74QaVmdcAH0E37noRr
        Xa39whqcG5Wa9cAPKjWrCz6Ebtp3d1zfau0X1uLcqNSsB35QqVmd8FF007674rpWa7+wHudGpWY98INK
        zeqGj6OTdt0V17Va+4X1ODcqNeuBH1RqVkd8IJ206264ntXaL/TAuVGpWQ/8oFrzOuJD6aRdd8A1rNZ+
        oQ/Oi2rNe+AH1ZrXFR9NJ+3aGbuv1n6hF86Las174AfVmtcZH08n7doVe6/WfqEXzotqzXvgB9Wa1x0f
        UCft2g37rtZ+oR/Oi2rNe+AH1Zq3Az6kTtq1A3Zcrf1CX5wX1Zr3wA+qNW8XfFSdtOtK7LZa+4XeOC8q
        NetT/LBSs3bCx9VJu67CXqu1X+iN86JSsz7FDys1azd8YJ2062zss1r7hf44Lyo161P8sFKzdsNH1k37
        zsAOq7Vf2AfnRaVmfYofVmrWjvjgumnfkZi9WvuFvXBeVGrWp/hhtebtiA+vm/YdgZkdtGPYB+dEteb9
        ET+u1Kxd8fF10q7VmNdBO4a9cE5UataX+AeVmrUzPsJu2rcCM1Zrv7AnzolKzfoS/6Ba83bGB9lJu/4U
        /3+19gt74nyo1rwv8Q+qNW93fJidtOu7+L8dtGPYE+dDteZ9iX9QrXkn4OPspF1fxf/roB3DvjgfqjXv
        W/gn1Zp3Aj7Sbtr3O/gfq7Vf2BvnQrXmfRv/qFrzTsEH20m7foXfr9Z+YX+cC9Wa9238o2rNOwkfbift
        +hl+10E7hv1xLlRr3kv4Z5WadRo+3k7aVfx9B+0YzsC5UKlZL+MfVmveafiIu7lDXzuGc3AeVGvey/iH
        1Zp3Ij7oTnbvar9wFs6Das17Gf+wWvNOxEfdzc49f9/JcBrOg2rNexn/sFrzTsWHHb/WPQzn4Tyo1ryX
        8Q+rNe90fOTxqXsWzsV5UK15b+GfVmveyfjY4++6X+FcnAPVmvc2/nG15p2Ojz7+0r0K5+IcqNa8t/GP
        qzXvBnz4McPvNpwD1Zr3I/zzas27BYfAbbof4Q58/9Wa92MMqNa8W3Ag3Kb7Ee7A91+teT/GgBGaeQsO
        hVt0H8Id+O5HaGYJhlRr3k04HE7X9Yd78N1Xa14ZBo3QzNtwUJym6w134XsfoZmlGFatebfhwDhN1xvu
        wvderXnlGFiteTfi0DhF1xnuw/derXnlGFitebfi8Nhd1xfuxPderXnlGDhCM2/FIbKjrinci+98hGaW
        Y+Aozb0VB8puup5wJ77vUZo7BENHaOatOFB20rWEe/F9j9DMYRg8QjNvxsGyg64h3I3ve4RmDsXwEZp5
        Ow6Zjto5BN/1CM0cjgVGae7tOHC6ad9wN77nUZo7BUuM0MzbceB00q4h+J5HaOY0LDJCM0PPIWjHEP6F
        73mEZk7FMiM0M/yFQ2iFdgrh3/iOR2jmdCw0QjPDLxxIs7VPCP/GdzxCM6djoVGaG/7CgTRTu4Twb3y/
        ozR3OhYapbnhFw6mGdohhL/j+x2luUuw1CjNDb/jkBqhmSGI73aU5i7DYiM1O/zCYTVCM0P4O77XkZq9
        FMuN0tzwOw6sSs0KQXyvozR3ORYcpbnhdxxaVZoTwkf4XkdpbgssOUpzwxMH2Lv6vyF8hu90lOa2wrKj
        NDc8cZi9o/8Zwkf4PkdpbjssPFKzwxMH2iv6XyF8hO9ypGa3w8IjNTt8jIPtO/ofIXyG73KkZrfE0iM1
        O/wZB10GXvgJvseRmt0Wi4/U7BDCPHyPIzW7NZYfqdkhhPH4DkdqdntcwGjNDyGMw/c3WvO3wEWM1vwQ
        Qj2+u9GavxUuZrTmhxDq8L2N1vztcEGjNT+EUIfvbbTmb4cLGq35IYQ6fG+jNX9LXNQM7RBCeB/f1wzt
        sDUubrTmhxDex/c1WvOPwEWO1vwQwuv4rkZr/jG40BnaIYTwfXxPM7TDUbjYGdohhPA1vqMZ2uE4XPAM
        7RBC+Brf0QztcCQueoZ2CCF8ju9nhnY4Fhc+S3uEEJ74bmZpj+NxA2ZohxDCL3wvM7TDNbgRs7RHCCHv
        cQluxiztEcLN+D5maY/rcENmapcQbsR3MVO7XImbMlO7hHATvoeZ2uVq3JyZ2iWEG/AdzNQuIQcSwjS8
        /zO1S/gbbtZM7RLCiXjvZ2qXAG7YbO0Twkl432drn/ABbtps7RPCCXjPZ2uf8AfcvNnaJ4Sd8X7P1j7h
        G7iJs7VPCDvivZ6tfcILuJmztU8IO+F9nq19wou4oSu0Uwg74D1eoZ3CG7ipK7RTCJ3x/q7QTuEHuLmr
        tFcInfC+rtJeoQg3eoV2CqED3tMV2ikU44av0l4hrMT7uUp7hWLc8NXaL4SZeB9Xa78wADd9pXYLYSbe
        x5XaLQzGA1it/UIYgfdutfYLE/EwVmu/ECrxvq3WfmEyHkgH7RhCBd6zDtoxLMBD6aAdQ/gJ3q8O2jEs
        xgPqoB1DeAXvUwftGBrhYXXRniH8Ce9PF+0ZmuGBddKuIXyE96aTdg0N8dA6adcQ/o73pZN2DRvgIXbS
        ruFOvBedtGvYDA+0m/YNd+F96KZ9w4Z4qB21czgbz7+jdg4b4+F21d7hLDzvrto7HIIH3Vm7hz3xXDtr
        93AgHnpn7R72wvPsrN3DwXj4O+gaQk88tx10DeECvAQ76BpCLzyvHXQN4TK8EDvpWsJcPI+ddC3hYrwc
        u+l6wljc/910PSFsf6n/pWsKtbjfO+qaQvh/vCw769rCe7ivO+vaQvgQL84pus7wO+7XKbrOEL6FF+k0
        Xe9tuB+n6XpDeAkv1Mm69lNx3Sfr2kN4Cy/W6br+3XF9p+v6QyjBi3a77s9s7HO77k8IQ/Dixc91776L
        /xM/170LYThewhhX6L0MYRpexhhn6n0MYRlezhhH6L0LoQ1e1hgr9b6F0BIvbow/0fsVwhZ4kWN8Re9T
        CNvi5Y7xI703IRyDlz3Gv+t9CeFIvPjxbr0fIVyBDyHepfchhKvxgcSz9LxDCB/gw4l76/mGEL6BDynu
        pecZQngDH1bsrecXQijGRxfX6LmEECbig4xz9BxCCIvxkcZa3e8QQlN8vPE93dcQwsb4wONfuk8hhMNx
        CNym+xFCuByHxCm6zhBC+DYOlM7aPYQQQgghhBBCCCGEEMJ9/B9Rh4I0pjBzVAAAAABJRU5ErkJggg==
</value>
  </data>
</root>